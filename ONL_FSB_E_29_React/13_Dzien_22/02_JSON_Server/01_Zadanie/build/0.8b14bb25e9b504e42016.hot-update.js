"use strict";
self["webpackHotUpdatees6_react"](0,{

/***/ 36:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var AddCar = function AddCar() {
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),
    _useState2 = _slicedToArray(_useState, 2),
    name = _useState2[0],
    setName = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),
    _useState4 = _slicedToArray(_useState3, 2),
    brand = _useState4[0],
    setBrand = _useState4[1];
  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),
    _useState6 = _slicedToArray(_useState5, 2),
    type = _useState6[0],
    setType = _useState6[1];
  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),
    _useState8 = _slicedToArray(_useState7, 2),
    hp = _useState8[0],
    setHp = _useState8[1];
  var inputHandler = function inputHandler(e, inputType) {
    var inputValue = e.target.value;
    switch (inputType) {
      case 'name':
        setName(inputValue);
        break;
      case 'brand':
        setBrand(inputValue);
        break;
      case 'type':
        setType(inputValue);
        break;
      case 'hp':
        setHp(inputValue);
        break;
    }
  };
  var submitHandler = function submitHandler(e) {
    e.preventDefault();
    console.log(e);
    var formInfo = {
      "id": 16,
      "name": e.target.value.name,
      "brand": e.target.value.brand,
      "engine": {
        "type": e.target.value.type,
        "hp": 760
      }
    };
    setName("");
    setBrand("");
    setType("");
    setHp("");
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("form", {
    onSubmit: submitHandler
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", null, "Nazwa"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "text",
    onChange: function onChange(e, inputType) {
      return inputHandler(e, 'name');
    },
    value: name
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", null, "Marka"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "text",
    onChange: function onChange(e, inputType) {
      return inputHandler(e, 'brand');
    },
    value: brand
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", null, "Typ"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "text",
    onChange: function onChange(e, inputType) {
      return inputHandler(e, 'type');
    },
    value: type
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", null, "Moc"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "text",
    onChange: function onChange(e, inputType) {
      return inputHandler(e, 'hp');
    },
    value: hp
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "submit",
    value: "AddCar"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddCar);

/***/ }),

/***/ 35:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AddCar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var CarsManager = function CarsManager() {
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    cars = _useState2[0],
    setCars = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState4 = _slicedToArray(_useState3, 2),
    status = _useState4[0],
    setStatus = _useState4[1];
  var URL = "http://localhost:3000/cars";
  var fetchCars = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url) {
      var res, resParsed;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return fetch(url);
          case 2:
            res = _context.sent;
            _context.next = 5;
            return res.json();
          case 5:
            resParsed = _context.sent;
            console.log(resParsed);
            setCars(resParsed);
          case 8:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function fetchCars(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    fetchCars(URL);
  }, [status]);
  var deleteCar = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return fetch("".concat(URL, "/").concat(id), {
              method: "DELETE"
            });
          case 2:
            setStatus(function (prevState) {
              return !prevState;
            });
          case 3:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function deleteCar(_x2) {
      return _ref2.apply(this, arguments);
    };
  }();
  var carList = cars ? cars.map(function (car) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", {
      key: car.id
    }, car.name, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
      onClick: function onClick() {
        return deleteCar(car.id);
      }
    }, "Sold"));
  }) : "no cars";
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ul", null, carList), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AddCar__WEBPACK_IMPORTED_MODULE_1__["default"], null));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CarsManager);

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("ba399fb6ea8d152e3ceb")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC44YjE0YmIyNWU5YjUwNGU0MjAxNi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUV4QyxJQUFNRSxNQUFNLEdBQUcsU0FBVEEsTUFBTUEsQ0FBQSxFQUFTO0VBRWpCLElBQUFDLFNBQUEsR0FBd0JGLCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBQUFHLFVBQUEsR0FBQUMsY0FBQSxDQUFBRixTQUFBO0lBQTdCRyxJQUFJLEdBQUFGLFVBQUE7SUFBRUcsT0FBTyxHQUFBSCxVQUFBO0VBQ3BCLElBQUFJLFVBQUEsR0FBMEJQLCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBQUFRLFVBQUEsR0FBQUosY0FBQSxDQUFBRyxVQUFBO0lBQS9CRSxLQUFLLEdBQUFELFVBQUE7SUFBRUUsUUFBUSxHQUFBRixVQUFBO0VBQ3RCLElBQUFHLFVBQUEsR0FBd0JYLCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBQUFZLFVBQUEsR0FBQVIsY0FBQSxDQUFBTyxVQUFBO0lBQTdCRSxJQUFJLEdBQUFELFVBQUE7SUFBRUUsT0FBTyxHQUFBRixVQUFBO0VBQ3BCLElBQUFHLFVBQUEsR0FBb0JmLCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBQUFnQixVQUFBLEdBQUFaLGNBQUEsQ0FBQVcsVUFBQTtJQUF6QkUsRUFBRSxHQUFBRCxVQUFBO0lBQUVFLEtBQUssR0FBQUYsVUFBQTtFQUVoQixJQUFNRyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSUMsQ0FBQyxFQUFFQyxTQUFTLEVBQUs7SUFDbkMsSUFBTUMsVUFBVSxHQUFHRixDQUFDLENBQUNHLE1BQU0sQ0FBQ0MsS0FBSztJQUVqQyxRQUFPSCxTQUFTO01BQ1osS0FBSyxNQUFNO1FBQUVmLE9BQU8sQ0FBQ2dCLFVBQVUsQ0FBQztRQUNoQztNQUNBLEtBQUssT0FBTztRQUFFWixRQUFRLENBQUNZLFVBQVUsQ0FBQztRQUNsQztNQUNBLEtBQUssTUFBTTtRQUFFUixPQUFPLENBQUNRLFVBQVUsQ0FBQztRQUNoQztNQUNBLEtBQUssSUFBSTtRQUFFSixLQUFLLENBQUNJLFVBQVUsQ0FBQztRQUM1QjtJQUNKO0VBRUosQ0FBQztFQUVELElBQU1HLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBSUwsQ0FBQyxFQUFLO0lBRXpCQSxDQUFDLENBQUNNLGNBQWMsQ0FBQyxDQUFDO0lBQ2xCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ1IsQ0FBQyxDQUFDO0lBQ2QsSUFBTVMsUUFBUSxHQUFPO01BQ2pCLElBQUksRUFBRSxFQUFFO01BQ1IsTUFBTSxFQUFFVCxDQUFDLENBQUNHLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDbkIsSUFBSTtNQUMzQixPQUFPLEVBQUVlLENBQUMsQ0FBQ0csTUFBTSxDQUFDQyxLQUFLLENBQUNmLEtBQUs7TUFDN0IsUUFBUSxFQUFFO1FBQ1IsTUFBTSxFQUFFVyxDQUFDLENBQUNHLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDWCxJQUFJO1FBQzNCLElBQUksRUFBRTtNQUNSO0lBQ0YsQ0FBQztJQUVIUCxPQUFPLENBQUMsRUFBRSxDQUFDO0lBQ1hJLFFBQVEsQ0FBQyxFQUFFLENBQUM7SUFDWkksT0FBTyxDQUFDLEVBQUUsQ0FBQztJQUNYSSxLQUFLLENBQUMsRUFBRSxDQUFDO0VBRWIsQ0FBQztFQUtELG9CQUNJbkIsMERBQUEsQ0FBQUEsdURBQUEscUJBQ0lBLDBEQUFBO0lBQU1pQyxRQUFRLEVBQUVQO0VBQWMsZ0JBQzlCMUIsMERBQUEsZ0JBQU8sT0FFQSxDQUFDLGVBQ0pBLDBEQUFBO0lBQU9jLElBQUksRUFBQyxNQUFNO0lBQUNvQixRQUFRLEVBQUUsU0FBQUEsU0FBQ2IsQ0FBQyxFQUFFQyxTQUFTO01BQUEsT0FBS0YsWUFBWSxDQUFDQyxDQUFDLEVBQUMsTUFBTSxDQUFDO0lBQUEsQ0FBQztJQUFDSSxLQUFLLEVBQUVuQjtFQUFLLENBQVEsQ0FBQyxlQUNoR04sMERBQUEsZ0JBQU8sT0FFQSxDQUFDLGVBQ0pBLDBEQUFBO0lBQU9jLElBQUksRUFBQyxNQUFNO0lBQUNvQixRQUFRLEVBQUUsU0FBQUEsU0FBQ2IsQ0FBQyxFQUFFQyxTQUFTO01BQUEsT0FBS0YsWUFBWSxDQUFDQyxDQUFDLEVBQUMsT0FBTyxDQUFDO0lBQUEsQ0FBQztJQUFDSSxLQUFLLEVBQUVmO0VBQU0sQ0FBUSxDQUFDLGVBQ2xHViwwREFBQSxnQkFBTyxLQUVBLENBQUMsZUFDSkEsMERBQUE7SUFBT2MsSUFBSSxFQUFDLE1BQU07SUFBQ29CLFFBQVEsRUFBRSxTQUFBQSxTQUFDYixDQUFDLEVBQUVDLFNBQVM7TUFBQSxPQUFLRixZQUFZLENBQUNDLENBQUMsRUFBQyxNQUFNLENBQUM7SUFBQSxDQUFDO0lBQUNJLEtBQUssRUFBRVg7RUFBSyxDQUFRLENBQUMsZUFDaEdkLDBEQUFBLGdCQUFPLEtBRUEsQ0FBQyxlQUNKQSwwREFBQTtJQUFPYyxJQUFJLEVBQUMsTUFBTTtJQUFDb0IsUUFBUSxFQUFFLFNBQUFBLFNBQUNiLENBQUMsRUFBRUMsU0FBUztNQUFBLE9BQUtGLFlBQVksQ0FBQ0MsQ0FBQyxFQUFDLElBQUksQ0FBQztJQUFBLENBQUM7SUFBQ0ksS0FBSyxFQUFFUDtFQUFHLENBQVEsQ0FBQyxlQUN4RmxCLDBEQUFBO0lBQU9jLElBQUksRUFBQyxRQUFRO0lBQUNXLEtBQUssRUFBQztFQUFRLENBQVMsQ0FDMUMsQ0FFUixDQUFDO0FBRVgsQ0FBQztBQUVELGlFQUFldkIsTUFBTTs7Ozs7Ozs7Ozs7Ozs7OytDQzFFckIscUpBQUFpQyxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBZCxDQUFBLFNBQUFlLENBQUEsRUFBQWYsQ0FBQSxPQUFBZ0IsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLFNBQUEsRUFBQUMsQ0FBQSxHQUFBSCxDQUFBLENBQUFJLGNBQUEsRUFBQUMsQ0FBQSxHQUFBSixNQUFBLENBQUFLLGNBQUEsY0FBQVAsQ0FBQSxFQUFBZixDQUFBLEVBQUFnQixDQUFBLElBQUFELENBQUEsQ0FBQWYsQ0FBQSxJQUFBZ0IsQ0FBQSxDQUFBWixLQUFBLEtBQUFtQixDQUFBLHdCQUFBQyxNQUFBLEdBQUFBLE1BQUEsT0FBQUMsQ0FBQSxHQUFBRixDQUFBLENBQUFHLFFBQUEsa0JBQUFDLENBQUEsR0FBQUosQ0FBQSxDQUFBSyxhQUFBLHVCQUFBQyxDQUFBLEdBQUFOLENBQUEsQ0FBQU8sV0FBQSw4QkFBQUMsT0FBQWhCLENBQUEsRUFBQWYsQ0FBQSxFQUFBZ0IsQ0FBQSxXQUFBQyxNQUFBLENBQUFLLGNBQUEsQ0FBQVAsQ0FBQSxFQUFBZixDQUFBLElBQUFJLEtBQUEsRUFBQVksQ0FBQSxFQUFBZ0IsVUFBQSxNQUFBQyxZQUFBLE1BQUFDLFFBQUEsU0FBQW5CLENBQUEsQ0FBQWYsQ0FBQSxXQUFBK0IsTUFBQSxtQkFBQWhCLENBQUEsSUFBQWdCLE1BQUEsWUFBQUEsT0FBQWhCLENBQUEsRUFBQWYsQ0FBQSxFQUFBZ0IsQ0FBQSxXQUFBRCxDQUFBLENBQUFmLENBQUEsSUFBQWdCLENBQUEsZ0JBQUFtQixLQUFBcEIsQ0FBQSxFQUFBZixDQUFBLEVBQUFnQixDQUFBLEVBQUFHLENBQUEsUUFBQUksQ0FBQSxHQUFBdkIsQ0FBQSxJQUFBQSxDQUFBLENBQUFrQixTQUFBLFlBQUFrQixTQUFBLEdBQUFwQyxDQUFBLEdBQUFvQyxTQUFBLEVBQUFYLENBQUEsR0FBQVIsTUFBQSxDQUFBb0IsTUFBQSxDQUFBZCxDQUFBLENBQUFMLFNBQUEsR0FBQVMsQ0FBQSxPQUFBVyxPQUFBLENBQUFuQixDQUFBLGdCQUFBRSxDQUFBLENBQUFJLENBQUEsZUFBQXJCLEtBQUEsRUFBQW1DLGdCQUFBLENBQUF4QixDQUFBLEVBQUFDLENBQUEsRUFBQVcsQ0FBQSxNQUFBRixDQUFBLGFBQUFlLFNBQUF6QixDQUFBLEVBQUFmLENBQUEsRUFBQWdCLENBQUEsbUJBQUF2QixJQUFBLFlBQUFnRCxHQUFBLEVBQUExQixDQUFBLENBQUEyQixJQUFBLENBQUExQyxDQUFBLEVBQUFnQixDQUFBLGNBQUFELENBQUEsYUFBQXRCLElBQUEsV0FBQWdELEdBQUEsRUFBQTFCLENBQUEsUUFBQWYsQ0FBQSxDQUFBbUMsSUFBQSxHQUFBQSxJQUFBLE1BQUFRLENBQUEscUJBQUFDLENBQUEscUJBQUFDLENBQUEsZ0JBQUFDLENBQUEsZ0JBQUFDLENBQUEsZ0JBQUFYLFVBQUEsY0FBQVksa0JBQUEsY0FBQUMsMkJBQUEsU0FBQUMsQ0FBQSxPQUFBbkIsTUFBQSxDQUFBbUIsQ0FBQSxFQUFBekIsQ0FBQSxxQ0FBQTBCLENBQUEsR0FBQWxDLE1BQUEsQ0FBQW1DLGNBQUEsRUFBQUMsQ0FBQSxHQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBRyxNQUFBLFFBQUFELENBQUEsSUFBQUEsQ0FBQSxLQUFBckMsQ0FBQSxJQUFBRyxDQUFBLENBQUF1QixJQUFBLENBQUFXLENBQUEsRUFBQTVCLENBQUEsTUFBQXlCLENBQUEsR0FBQUcsQ0FBQSxPQUFBRSxDQUFBLEdBQUFOLDBCQUFBLENBQUEvQixTQUFBLEdBQUFrQixTQUFBLENBQUFsQixTQUFBLEdBQUFELE1BQUEsQ0FBQW9CLE1BQUEsQ0FBQWEsQ0FBQSxZQUFBTSxzQkFBQXpDLENBQUEsZ0NBQUEwQyxPQUFBLFdBQUF6RCxDQUFBLElBQUErQixNQUFBLENBQUFoQixDQUFBLEVBQUFmLENBQUEsWUFBQWUsQ0FBQSxnQkFBQTJDLE9BQUEsQ0FBQTFELENBQUEsRUFBQWUsQ0FBQSxzQkFBQTRDLGNBQUE1QyxDQUFBLEVBQUFmLENBQUEsYUFBQTRELE9BQUE1QyxDQUFBLEVBQUFLLENBQUEsRUFBQUUsQ0FBQSxFQUFBRSxDQUFBLFFBQUFFLENBQUEsR0FBQWEsUUFBQSxDQUFBekIsQ0FBQSxDQUFBQyxDQUFBLEdBQUFELENBQUEsRUFBQU0sQ0FBQSxtQkFBQU0sQ0FBQSxDQUFBbEMsSUFBQSxRQUFBb0MsQ0FBQSxHQUFBRixDQUFBLENBQUFjLEdBQUEsRUFBQUUsQ0FBQSxHQUFBZCxDQUFBLENBQUF6QixLQUFBLFNBQUF1QyxDQUFBLGdCQUFBa0IsT0FBQSxDQUFBbEIsQ0FBQSxLQUFBeEIsQ0FBQSxDQUFBdUIsSUFBQSxDQUFBQyxDQUFBLGVBQUEzQyxDQUFBLENBQUE4RCxPQUFBLENBQUFuQixDQUFBLENBQUFvQixPQUFBLEVBQUFDLElBQUEsV0FBQWpELENBQUEsSUFBQTZDLE1BQUEsU0FBQTdDLENBQUEsRUFBQVEsQ0FBQSxFQUFBRSxDQUFBLGdCQUFBVixDQUFBLElBQUE2QyxNQUFBLFVBQUE3QyxDQUFBLEVBQUFRLENBQUEsRUFBQUUsQ0FBQSxRQUFBekIsQ0FBQSxDQUFBOEQsT0FBQSxDQUFBbkIsQ0FBQSxFQUFBcUIsSUFBQSxXQUFBakQsQ0FBQSxJQUFBYyxDQUFBLENBQUF6QixLQUFBLEdBQUFXLENBQUEsRUFBQVEsQ0FBQSxDQUFBTSxDQUFBLGdCQUFBZCxDQUFBLFdBQUE2QyxNQUFBLFVBQUE3QyxDQUFBLEVBQUFRLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLENBQUFFLENBQUEsQ0FBQWMsR0FBQSxTQUFBekIsQ0FBQSxFQUFBSyxDQUFBLG9CQUFBakIsS0FBQSxXQUFBQSxNQUFBVyxDQUFBLEVBQUFJLENBQUEsYUFBQThDLDJCQUFBLGVBQUFqRSxDQUFBLFdBQUFBLENBQUEsRUFBQWdCLENBQUEsSUFBQTRDLE1BQUEsQ0FBQTdDLENBQUEsRUFBQUksQ0FBQSxFQUFBbkIsQ0FBQSxFQUFBZ0IsQ0FBQSxnQkFBQUEsQ0FBQSxHQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQWdELElBQUEsQ0FBQUMsMEJBQUEsRUFBQUEsMEJBQUEsSUFBQUEsMEJBQUEscUJBQUExQixpQkFBQXZDLENBQUEsRUFBQWdCLENBQUEsRUFBQUcsQ0FBQSxRQUFBRSxDQUFBLEdBQUFzQixDQUFBLG1CQUFBcEIsQ0FBQSxFQUFBRSxDQUFBLFFBQUFKLENBQUEsS0FBQXdCLENBQUEsWUFBQXFCLEtBQUEsc0NBQUE3QyxDQUFBLEtBQUF5QixDQUFBLG9CQUFBdkIsQ0FBQSxRQUFBRSxDQUFBLFdBQUFyQixLQUFBLEVBQUFXLENBQUEsRUFBQW9ELElBQUEsZUFBQWhELENBQUEsQ0FBQWlELE1BQUEsR0FBQTdDLENBQUEsRUFBQUosQ0FBQSxDQUFBc0IsR0FBQSxHQUFBaEIsQ0FBQSxVQUFBRSxDQUFBLEdBQUFSLENBQUEsQ0FBQWtELFFBQUEsTUFBQTFDLENBQUEsUUFBQUUsQ0FBQSxHQUFBeUMsbUJBQUEsQ0FBQTNDLENBQUEsRUFBQVIsQ0FBQSxPQUFBVSxDQUFBLFFBQUFBLENBQUEsS0FBQWtCLENBQUEsbUJBQUFsQixDQUFBLHFCQUFBVixDQUFBLENBQUFpRCxNQUFBLEVBQUFqRCxDQUFBLENBQUFvRCxJQUFBLEdBQUFwRCxDQUFBLENBQUFxRCxLQUFBLEdBQUFyRCxDQUFBLENBQUFzQixHQUFBLHNCQUFBdEIsQ0FBQSxDQUFBaUQsTUFBQSxRQUFBL0MsQ0FBQSxLQUFBc0IsQ0FBQSxRQUFBdEIsQ0FBQSxHQUFBeUIsQ0FBQSxFQUFBM0IsQ0FBQSxDQUFBc0IsR0FBQSxFQUFBdEIsQ0FBQSxDQUFBc0QsaUJBQUEsQ0FBQXRELENBQUEsQ0FBQXNCLEdBQUEsdUJBQUF0QixDQUFBLENBQUFpRCxNQUFBLElBQUFqRCxDQUFBLENBQUF1RCxNQUFBLFdBQUF2RCxDQUFBLENBQUFzQixHQUFBLEdBQUFwQixDQUFBLEdBQUF3QixDQUFBLE1BQUFLLENBQUEsR0FBQVYsUUFBQSxDQUFBeEMsQ0FBQSxFQUFBZ0IsQ0FBQSxFQUFBRyxDQUFBLG9CQUFBK0IsQ0FBQSxDQUFBekQsSUFBQSxRQUFBNEIsQ0FBQSxHQUFBRixDQUFBLENBQUFnRCxJQUFBLEdBQUFyQixDQUFBLEdBQUFGLENBQUEsRUFBQU0sQ0FBQSxDQUFBVCxHQUFBLEtBQUFNLENBQUEscUJBQUEzQyxLQUFBLEVBQUE4QyxDQUFBLENBQUFULEdBQUEsRUFBQTBCLElBQUEsRUFBQWhELENBQUEsQ0FBQWdELElBQUEsa0JBQUFqQixDQUFBLENBQUF6RCxJQUFBLEtBQUE0QixDQUFBLEdBQUF5QixDQUFBLEVBQUEzQixDQUFBLENBQUFpRCxNQUFBLFlBQUFqRCxDQUFBLENBQUFzQixHQUFBLEdBQUFTLENBQUEsQ0FBQVQsR0FBQSxtQkFBQTZCLG9CQUFBdEUsQ0FBQSxFQUFBZ0IsQ0FBQSxRQUFBRyxDQUFBLEdBQUFILENBQUEsQ0FBQW9ELE1BQUEsRUFBQS9DLENBQUEsR0FBQXJCLENBQUEsQ0FBQTBCLFFBQUEsQ0FBQVAsQ0FBQSxPQUFBRSxDQUFBLEtBQUFOLENBQUEsU0FBQUMsQ0FBQSxDQUFBcUQsUUFBQSxxQkFBQWxELENBQUEsSUFBQW5CLENBQUEsQ0FBQTBCLFFBQUEsZUFBQVYsQ0FBQSxDQUFBb0QsTUFBQSxhQUFBcEQsQ0FBQSxDQUFBeUIsR0FBQSxHQUFBMUIsQ0FBQSxFQUFBdUQsbUJBQUEsQ0FBQXRFLENBQUEsRUFBQWdCLENBQUEsZUFBQUEsQ0FBQSxDQUFBb0QsTUFBQSxrQkFBQWpELENBQUEsS0FBQUgsQ0FBQSxDQUFBb0QsTUFBQSxZQUFBcEQsQ0FBQSxDQUFBeUIsR0FBQSxPQUFBa0MsU0FBQSx1Q0FBQXhELENBQUEsaUJBQUE0QixDQUFBLE1BQUF4QixDQUFBLEdBQUFpQixRQUFBLENBQUFuQixDQUFBLEVBQUFyQixDQUFBLENBQUEwQixRQUFBLEVBQUFWLENBQUEsQ0FBQXlCLEdBQUEsbUJBQUFsQixDQUFBLENBQUE5QixJQUFBLFNBQUF1QixDQUFBLENBQUFvRCxNQUFBLFlBQUFwRCxDQUFBLENBQUF5QixHQUFBLEdBQUFsQixDQUFBLENBQUFrQixHQUFBLEVBQUF6QixDQUFBLENBQUFxRCxRQUFBLFNBQUF0QixDQUFBLE1BQUF0QixDQUFBLEdBQUFGLENBQUEsQ0FBQWtCLEdBQUEsU0FBQWhCLENBQUEsR0FBQUEsQ0FBQSxDQUFBMEMsSUFBQSxJQUFBbkQsQ0FBQSxDQUFBaEIsQ0FBQSxDQUFBNEUsVUFBQSxJQUFBbkQsQ0FBQSxDQUFBckIsS0FBQSxFQUFBWSxDQUFBLENBQUE2RCxJQUFBLEdBQUE3RSxDQUFBLENBQUE4RSxPQUFBLGVBQUE5RCxDQUFBLENBQUFvRCxNQUFBLEtBQUFwRCxDQUFBLENBQUFvRCxNQUFBLFdBQUFwRCxDQUFBLENBQUF5QixHQUFBLEdBQUExQixDQUFBLEdBQUFDLENBQUEsQ0FBQXFELFFBQUEsU0FBQXRCLENBQUEsSUFBQXRCLENBQUEsSUFBQVQsQ0FBQSxDQUFBb0QsTUFBQSxZQUFBcEQsQ0FBQSxDQUFBeUIsR0FBQSxPQUFBa0MsU0FBQSxzQ0FBQTNELENBQUEsQ0FBQXFELFFBQUEsU0FBQXRCLENBQUEsY0FBQWdDLGFBQUFoRSxDQUFBLFFBQUFmLENBQUEsS0FBQWdGLE1BQUEsRUFBQWpFLENBQUEsWUFBQUEsQ0FBQSxLQUFBZixDQUFBLENBQUFpRixRQUFBLEdBQUFsRSxDQUFBLFdBQUFBLENBQUEsS0FBQWYsQ0FBQSxDQUFBa0YsVUFBQSxHQUFBbkUsQ0FBQSxLQUFBZixDQUFBLENBQUFtRixRQUFBLEdBQUFwRSxDQUFBLFdBQUFxRSxVQUFBLENBQUFDLElBQUEsQ0FBQXJGLENBQUEsY0FBQXNGLGNBQUF2RSxDQUFBLFFBQUFmLENBQUEsR0FBQWUsQ0FBQSxDQUFBd0UsVUFBQSxRQUFBdkYsQ0FBQSxDQUFBUCxJQUFBLG9CQUFBTyxDQUFBLENBQUF5QyxHQUFBLEVBQUExQixDQUFBLENBQUF3RSxVQUFBLEdBQUF2RixDQUFBLGFBQUFzQyxRQUFBdkIsQ0FBQSxTQUFBcUUsVUFBQSxNQUFBSixNQUFBLGFBQUFqRSxDQUFBLENBQUEwQyxPQUFBLENBQUFzQixZQUFBLGNBQUFTLEtBQUEsaUJBQUFsQyxPQUFBdEQsQ0FBQSxRQUFBQSxDQUFBLFdBQUFBLENBQUEsUUFBQWdCLENBQUEsR0FBQWhCLENBQUEsQ0FBQXlCLENBQUEsT0FBQVQsQ0FBQSxTQUFBQSxDQUFBLENBQUEwQixJQUFBLENBQUExQyxDQUFBLDRCQUFBQSxDQUFBLENBQUE2RSxJQUFBLFNBQUE3RSxDQUFBLE9BQUF5RixLQUFBLENBQUF6RixDQUFBLENBQUEwRixNQUFBLFNBQUFyRSxDQUFBLE9BQUFFLENBQUEsWUFBQXNELEtBQUEsYUFBQXhELENBQUEsR0FBQXJCLENBQUEsQ0FBQTBGLE1BQUEsT0FBQXZFLENBQUEsQ0FBQXVCLElBQUEsQ0FBQTFDLENBQUEsRUFBQXFCLENBQUEsVUFBQXdELElBQUEsQ0FBQXpFLEtBQUEsR0FBQUosQ0FBQSxDQUFBcUIsQ0FBQSxHQUFBd0QsSUFBQSxDQUFBVixJQUFBLE9BQUFVLElBQUEsU0FBQUEsSUFBQSxDQUFBekUsS0FBQSxHQUFBVyxDQUFBLEVBQUE4RCxJQUFBLENBQUFWLElBQUEsT0FBQVUsSUFBQSxZQUFBdEQsQ0FBQSxDQUFBc0QsSUFBQSxHQUFBdEQsQ0FBQSxnQkFBQW9ELFNBQUEsQ0FBQWQsT0FBQSxDQUFBN0QsQ0FBQSxrQ0FBQWdELGlCQUFBLENBQUE5QixTQUFBLEdBQUErQiwwQkFBQSxFQUFBNUIsQ0FBQSxDQUFBa0MsQ0FBQSxtQkFBQW5ELEtBQUEsRUFBQTZDLDBCQUFBLEVBQUFoQixZQUFBLFNBQUFaLENBQUEsQ0FBQTRCLDBCQUFBLG1CQUFBN0MsS0FBQSxFQUFBNEMsaUJBQUEsRUFBQWYsWUFBQSxTQUFBZSxpQkFBQSxDQUFBMkMsV0FBQSxHQUFBNUQsTUFBQSxDQUFBa0IsMEJBQUEsRUFBQXBCLENBQUEsd0JBQUE3QixDQUFBLENBQUE0RixtQkFBQSxhQUFBN0UsQ0FBQSxRQUFBZixDQUFBLHdCQUFBZSxDQUFBLElBQUFBLENBQUEsQ0FBQThFLFdBQUEsV0FBQTdGLENBQUEsS0FBQUEsQ0FBQSxLQUFBZ0QsaUJBQUEsNkJBQUFoRCxDQUFBLENBQUEyRixXQUFBLElBQUEzRixDQUFBLENBQUFmLElBQUEsT0FBQWUsQ0FBQSxDQUFBOEYsSUFBQSxhQUFBL0UsQ0FBQSxXQUFBRSxNQUFBLENBQUE4RSxjQUFBLEdBQUE5RSxNQUFBLENBQUE4RSxjQUFBLENBQUFoRixDQUFBLEVBQUFrQywwQkFBQSxLQUFBbEMsQ0FBQSxDQUFBaUYsU0FBQSxHQUFBL0MsMEJBQUEsRUFBQWxCLE1BQUEsQ0FBQWhCLENBQUEsRUFBQWMsQ0FBQSx5QkFBQWQsQ0FBQSxDQUFBRyxTQUFBLEdBQUFELE1BQUEsQ0FBQW9CLE1BQUEsQ0FBQWtCLENBQUEsR0FBQXhDLENBQUEsS0FBQWYsQ0FBQSxDQUFBaUcsS0FBQSxhQUFBbEYsQ0FBQSxhQUFBZ0QsT0FBQSxFQUFBaEQsQ0FBQSxPQUFBeUMscUJBQUEsQ0FBQUcsYUFBQSxDQUFBekMsU0FBQSxHQUFBYSxNQUFBLENBQUE0QixhQUFBLENBQUF6QyxTQUFBLEVBQUFTLENBQUEsaUNBQUEzQixDQUFBLENBQUEyRCxhQUFBLEdBQUFBLGFBQUEsRUFBQTNELENBQUEsQ0FBQWtHLEtBQUEsYUFBQW5GLENBQUEsRUFBQUMsQ0FBQSxFQUFBRyxDQUFBLEVBQUFFLENBQUEsRUFBQUUsQ0FBQSxlQUFBQSxDQUFBLEtBQUFBLENBQUEsR0FBQTRFLE9BQUEsT0FBQTFFLENBQUEsT0FBQWtDLGFBQUEsQ0FBQXhCLElBQUEsQ0FBQXBCLENBQUEsRUFBQUMsQ0FBQSxFQUFBRyxDQUFBLEVBQUFFLENBQUEsR0FBQUUsQ0FBQSxVQUFBdkIsQ0FBQSxDQUFBNEYsbUJBQUEsQ0FBQTVFLENBQUEsSUFBQVMsQ0FBQSxHQUFBQSxDQUFBLENBQUFvRCxJQUFBLEdBQUFiLElBQUEsV0FBQWpELENBQUEsV0FBQUEsQ0FBQSxDQUFBb0QsSUFBQSxHQUFBcEQsQ0FBQSxDQUFBWCxLQUFBLEdBQUFxQixDQUFBLENBQUFvRCxJQUFBLFdBQUFyQixxQkFBQSxDQUFBRCxDQUFBLEdBQUF4QixNQUFBLENBQUF3QixDQUFBLEVBQUExQixDQUFBLGdCQUFBRSxNQUFBLENBQUF3QixDQUFBLEVBQUE5QixDQUFBLGlDQUFBTSxNQUFBLENBQUF3QixDQUFBLDZEQUFBdkQsQ0FBQSxDQUFBb0csSUFBQSxhQUFBckYsQ0FBQSxRQUFBZixDQUFBLEdBQUFpQixNQUFBLENBQUFGLENBQUEsR0FBQUMsQ0FBQSxnQkFBQUcsQ0FBQSxJQUFBbkIsQ0FBQSxFQUFBZ0IsQ0FBQSxDQUFBcUUsSUFBQSxDQUFBbEUsQ0FBQSxVQUFBSCxDQUFBLENBQUFxRixPQUFBLGFBQUF4QixLQUFBLFdBQUE3RCxDQUFBLENBQUEwRSxNQUFBLFNBQUEzRSxDQUFBLEdBQUFDLENBQUEsQ0FBQXNGLEdBQUEsUUFBQXZGLENBQUEsSUFBQWYsQ0FBQSxTQUFBNkUsSUFBQSxDQUFBekUsS0FBQSxHQUFBVyxDQUFBLEVBQUE4RCxJQUFBLENBQUFWLElBQUEsT0FBQVUsSUFBQSxXQUFBQSxJQUFBLENBQUFWLElBQUEsT0FBQVUsSUFBQSxRQUFBN0UsQ0FBQSxDQUFBc0QsTUFBQSxHQUFBQSxNQUFBLEVBQUFoQixPQUFBLENBQUFwQixTQUFBLEtBQUEyRSxXQUFBLEVBQUF2RCxPQUFBLEVBQUFrRCxLQUFBLFdBQUFBLE1BQUF4RixDQUFBLGFBQUF1RyxJQUFBLFdBQUExQixJQUFBLFdBQUFOLElBQUEsUUFBQUMsS0FBQSxHQUFBekQsQ0FBQSxPQUFBb0QsSUFBQSxZQUFBRSxRQUFBLGNBQUFELE1BQUEsZ0JBQUEzQixHQUFBLEdBQUExQixDQUFBLE9BQUFxRSxVQUFBLENBQUEzQixPQUFBLENBQUE2QixhQUFBLElBQUF0RixDQUFBLFdBQUFnQixDQUFBLGtCQUFBQSxDQUFBLENBQUF3RixNQUFBLE9BQUFyRixDQUFBLENBQUF1QixJQUFBLE9BQUExQixDQUFBLE1BQUF5RSxLQUFBLEVBQUF6RSxDQUFBLENBQUF5RixLQUFBLGNBQUF6RixDQUFBLElBQUFELENBQUEsTUFBQTJGLElBQUEsV0FBQUEsS0FBQSxTQUFBdkMsSUFBQSxXQUFBcEQsQ0FBQSxRQUFBcUUsVUFBQSxJQUFBRyxVQUFBLGtCQUFBeEUsQ0FBQSxDQUFBdEIsSUFBQSxRQUFBc0IsQ0FBQSxDQUFBMEIsR0FBQSxjQUFBa0UsSUFBQSxLQUFBbEMsaUJBQUEsV0FBQUEsa0JBQUF6RSxDQUFBLGFBQUFtRSxJQUFBLFFBQUFuRSxDQUFBLE1BQUFnQixDQUFBLGtCQUFBNEYsT0FBQXpGLENBQUEsRUFBQUUsQ0FBQSxXQUFBSSxDQUFBLENBQUFoQyxJQUFBLFlBQUFnQyxDQUFBLENBQUFnQixHQUFBLEdBQUF6QyxDQUFBLEVBQUFnQixDQUFBLENBQUE2RCxJQUFBLEdBQUExRCxDQUFBLEVBQUFFLENBQUEsS0FBQUwsQ0FBQSxDQUFBb0QsTUFBQSxXQUFBcEQsQ0FBQSxDQUFBeUIsR0FBQSxHQUFBMUIsQ0FBQSxLQUFBTSxDQUFBLGFBQUFBLENBQUEsUUFBQStELFVBQUEsQ0FBQU0sTUFBQSxNQUFBckUsQ0FBQSxTQUFBQSxDQUFBLFFBQUFFLENBQUEsUUFBQTZELFVBQUEsQ0FBQS9ELENBQUEsR0FBQUksQ0FBQSxHQUFBRixDQUFBLENBQUFnRSxVQUFBLGlCQUFBaEUsQ0FBQSxDQUFBeUQsTUFBQSxTQUFBNEIsTUFBQSxhQUFBckYsQ0FBQSxDQUFBeUQsTUFBQSxTQUFBdUIsSUFBQSxRQUFBNUUsQ0FBQSxHQUFBUixDQUFBLENBQUF1QixJQUFBLENBQUFuQixDQUFBLGVBQUFNLENBQUEsR0FBQVYsQ0FBQSxDQUFBdUIsSUFBQSxDQUFBbkIsQ0FBQSxxQkFBQUksQ0FBQSxJQUFBRSxDQUFBLGFBQUEwRSxJQUFBLEdBQUFoRixDQUFBLENBQUEwRCxRQUFBLFNBQUEyQixNQUFBLENBQUFyRixDQUFBLENBQUEwRCxRQUFBLGdCQUFBc0IsSUFBQSxHQUFBaEYsQ0FBQSxDQUFBMkQsVUFBQSxTQUFBMEIsTUFBQSxDQUFBckYsQ0FBQSxDQUFBMkQsVUFBQSxjQUFBdkQsQ0FBQSxhQUFBNEUsSUFBQSxHQUFBaEYsQ0FBQSxDQUFBMEQsUUFBQSxTQUFBMkIsTUFBQSxDQUFBckYsQ0FBQSxDQUFBMEQsUUFBQSxxQkFBQXBELENBQUEsWUFBQXFDLEtBQUEscURBQUFxQyxJQUFBLEdBQUFoRixDQUFBLENBQUEyRCxVQUFBLFNBQUEwQixNQUFBLENBQUFyRixDQUFBLENBQUEyRCxVQUFBLFlBQUFSLE1BQUEsV0FBQUEsT0FBQTNELENBQUEsRUFBQWYsQ0FBQSxhQUFBZ0IsQ0FBQSxRQUFBb0UsVUFBQSxDQUFBTSxNQUFBLE1BQUExRSxDQUFBLFNBQUFBLENBQUEsUUFBQUssQ0FBQSxRQUFBK0QsVUFBQSxDQUFBcEUsQ0FBQSxPQUFBSyxDQUFBLENBQUEyRCxNQUFBLFNBQUF1QixJQUFBLElBQUFwRixDQUFBLENBQUF1QixJQUFBLENBQUFyQixDQUFBLHdCQUFBa0YsSUFBQSxHQUFBbEYsQ0FBQSxDQUFBNkQsVUFBQSxRQUFBM0QsQ0FBQSxHQUFBRixDQUFBLGFBQUFFLENBQUEsaUJBQUFSLENBQUEsbUJBQUFBLENBQUEsS0FBQVEsQ0FBQSxDQUFBeUQsTUFBQSxJQUFBaEYsQ0FBQSxJQUFBQSxDQUFBLElBQUF1QixDQUFBLENBQUEyRCxVQUFBLEtBQUEzRCxDQUFBLGNBQUFFLENBQUEsR0FBQUYsQ0FBQSxHQUFBQSxDQUFBLENBQUFnRSxVQUFBLGNBQUE5RCxDQUFBLENBQUFoQyxJQUFBLEdBQUFzQixDQUFBLEVBQUFVLENBQUEsQ0FBQWdCLEdBQUEsR0FBQXpDLENBQUEsRUFBQXVCLENBQUEsU0FBQTZDLE1BQUEsZ0JBQUFTLElBQUEsR0FBQXRELENBQUEsQ0FBQTJELFVBQUEsRUFBQW5DLENBQUEsU0FBQThELFFBQUEsQ0FBQXBGLENBQUEsTUFBQW9GLFFBQUEsV0FBQUEsU0FBQTlGLENBQUEsRUFBQWYsQ0FBQSxvQkFBQWUsQ0FBQSxDQUFBdEIsSUFBQSxRQUFBc0IsQ0FBQSxDQUFBMEIsR0FBQSxxQkFBQTFCLENBQUEsQ0FBQXRCLElBQUEsbUJBQUFzQixDQUFBLENBQUF0QixJQUFBLFFBQUFvRixJQUFBLEdBQUE5RCxDQUFBLENBQUEwQixHQUFBLGdCQUFBMUIsQ0FBQSxDQUFBdEIsSUFBQSxTQUFBa0gsSUFBQSxRQUFBbEUsR0FBQSxHQUFBMUIsQ0FBQSxDQUFBMEIsR0FBQSxPQUFBMkIsTUFBQSxrQkFBQVMsSUFBQSx5QkFBQTlELENBQUEsQ0FBQXRCLElBQUEsSUFBQU8sQ0FBQSxVQUFBNkUsSUFBQSxHQUFBN0UsQ0FBQSxHQUFBK0MsQ0FBQSxLQUFBK0QsTUFBQSxXQUFBQSxPQUFBL0YsQ0FBQSxhQUFBZixDQUFBLFFBQUFvRixVQUFBLENBQUFNLE1BQUEsTUFBQTFGLENBQUEsU0FBQUEsQ0FBQSxRQUFBZ0IsQ0FBQSxRQUFBb0UsVUFBQSxDQUFBcEYsQ0FBQSxPQUFBZ0IsQ0FBQSxDQUFBa0UsVUFBQSxLQUFBbkUsQ0FBQSxjQUFBOEYsUUFBQSxDQUFBN0YsQ0FBQSxDQUFBdUUsVUFBQSxFQUFBdkUsQ0FBQSxDQUFBbUUsUUFBQSxHQUFBRyxhQUFBLENBQUF0RSxDQUFBLEdBQUErQixDQUFBLHlCQUFBZ0UsT0FBQWhHLENBQUEsYUFBQWYsQ0FBQSxRQUFBb0YsVUFBQSxDQUFBTSxNQUFBLE1BQUExRixDQUFBLFNBQUFBLENBQUEsUUFBQWdCLENBQUEsUUFBQW9FLFVBQUEsQ0FBQXBGLENBQUEsT0FBQWdCLENBQUEsQ0FBQWdFLE1BQUEsS0FBQWpFLENBQUEsUUFBQUksQ0FBQSxHQUFBSCxDQUFBLENBQUF1RSxVQUFBLGtCQUFBcEUsQ0FBQSxDQUFBMUIsSUFBQSxRQUFBNEIsQ0FBQSxHQUFBRixDQUFBLENBQUFzQixHQUFBLEVBQUE2QyxhQUFBLENBQUF0RSxDQUFBLFlBQUFLLENBQUEsZ0JBQUE2QyxLQUFBLDhCQUFBOEMsYUFBQSxXQUFBQSxjQUFBaEgsQ0FBQSxFQUFBZ0IsQ0FBQSxFQUFBRyxDQUFBLGdCQUFBa0QsUUFBQSxLQUFBM0MsUUFBQSxFQUFBNEIsTUFBQSxDQUFBdEQsQ0FBQSxHQUFBNEUsVUFBQSxFQUFBNUQsQ0FBQSxFQUFBOEQsT0FBQSxFQUFBM0QsQ0FBQSxvQkFBQWlELE1BQUEsVUFBQTNCLEdBQUEsR0FBQTFCLENBQUEsR0FBQWdDLENBQUEsT0FBQS9DLENBQUE7QUFBQSxTQUFBaUgsbUJBQUFDLEdBQUEsRUFBQXBELE9BQUEsRUFBQXFELE1BQUEsRUFBQUMsS0FBQSxFQUFBQyxNQUFBLEVBQUFDLEdBQUEsRUFBQTdFLEdBQUEsY0FBQThFLElBQUEsR0FBQUwsR0FBQSxDQUFBSSxHQUFBLEVBQUE3RSxHQUFBLE9BQUFyQyxLQUFBLEdBQUFtSCxJQUFBLENBQUFuSCxLQUFBLFdBQUFvSCxLQUFBLElBQUFMLE1BQUEsQ0FBQUssS0FBQSxpQkFBQUQsSUFBQSxDQUFBcEQsSUFBQSxJQUFBTCxPQUFBLENBQUExRCxLQUFBLFlBQUErRixPQUFBLENBQUFyQyxPQUFBLENBQUExRCxLQUFBLEVBQUE0RCxJQUFBLENBQUFvRCxLQUFBLEVBQUFDLE1BQUE7QUFBQSxTQUFBSSxrQkFBQUMsRUFBQSw2QkFBQUMsSUFBQSxTQUFBQyxJQUFBLEdBQUFDLFNBQUEsYUFBQTFCLE9BQUEsV0FBQXJDLE9BQUEsRUFBQXFELE1BQUEsUUFBQUQsR0FBQSxHQUFBUSxFQUFBLENBQUFJLEtBQUEsQ0FBQUgsSUFBQSxFQUFBQyxJQUFBLFlBQUFSLE1BQUFoSCxLQUFBLElBQUE2RyxrQkFBQSxDQUFBQyxHQUFBLEVBQUFwRCxPQUFBLEVBQUFxRCxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxVQUFBakgsS0FBQSxjQUFBaUgsT0FBQVUsR0FBQSxJQUFBZCxrQkFBQSxDQUFBQyxHQUFBLEVBQUFwRCxPQUFBLEVBQUFxRCxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxXQUFBVSxHQUFBLEtBQUFYLEtBQUEsQ0FBQVksU0FBQTtBQUFBLFNBQUFoSixlQUFBaUosR0FBQSxFQUFBMUcsQ0FBQSxXQUFBMkcsZUFBQSxDQUFBRCxHQUFBLEtBQUFFLHFCQUFBLENBQUFGLEdBQUEsRUFBQTFHLENBQUEsS0FBQTZHLDJCQUFBLENBQUFILEdBQUEsRUFBQTFHLENBQUEsS0FBQThHLGdCQUFBO0FBQUEsU0FBQUEsaUJBQUEsY0FBQTFELFNBQUE7QUFBQSxTQUFBeUQsNEJBQUEvRyxDQUFBLEVBQUFpSCxNQUFBLFNBQUFqSCxDQUFBLHFCQUFBQSxDQUFBLHNCQUFBa0gsaUJBQUEsQ0FBQWxILENBQUEsRUFBQWlILE1BQUEsT0FBQW5ILENBQUEsR0FBQUYsTUFBQSxDQUFBQyxTQUFBLENBQUFzSCxRQUFBLENBQUE5RixJQUFBLENBQUFyQixDQUFBLEVBQUFvRixLQUFBLGFBQUF0RixDQUFBLGlCQUFBRSxDQUFBLENBQUF3RSxXQUFBLEVBQUExRSxDQUFBLEdBQUFFLENBQUEsQ0FBQXdFLFdBQUEsQ0FBQTVHLElBQUEsTUFBQWtDLENBQUEsY0FBQUEsQ0FBQSxtQkFBQXNILEtBQUEsQ0FBQUMsSUFBQSxDQUFBckgsQ0FBQSxPQUFBRixDQUFBLCtEQUFBd0gsSUFBQSxDQUFBeEgsQ0FBQSxVQUFBb0gsaUJBQUEsQ0FBQWxILENBQUEsRUFBQWlILE1BQUE7QUFBQSxTQUFBQyxrQkFBQU4sR0FBQSxFQUFBVyxHQUFBLFFBQUFBLEdBQUEsWUFBQUEsR0FBQSxHQUFBWCxHQUFBLENBQUF2QyxNQUFBLEVBQUFrRCxHQUFBLEdBQUFYLEdBQUEsQ0FBQXZDLE1BQUEsV0FBQW5FLENBQUEsTUFBQXNILElBQUEsT0FBQUosS0FBQSxDQUFBRyxHQUFBLEdBQUFySCxDQUFBLEdBQUFxSCxHQUFBLEVBQUFySCxDQUFBLElBQUFzSCxJQUFBLENBQUF0SCxDQUFBLElBQUEwRyxHQUFBLENBQUExRyxDQUFBLFVBQUFzSCxJQUFBO0FBQUEsU0FBQVYsc0JBQUFuSCxDQUFBLEVBQUE0QixDQUFBLFFBQUE3QixDQUFBLFdBQUFDLENBQUEsZ0NBQUFRLE1BQUEsSUFBQVIsQ0FBQSxDQUFBUSxNQUFBLENBQUFFLFFBQUEsS0FBQVYsQ0FBQSw0QkFBQUQsQ0FBQSxRQUFBZixDQUFBLEVBQUFtQixDQUFBLEVBQUFJLENBQUEsRUFBQU0sQ0FBQSxFQUFBSixDQUFBLE9BQUFvQixDQUFBLE9BQUF4QixDQUFBLGlCQUFBRSxDQUFBLElBQUFSLENBQUEsR0FBQUEsQ0FBQSxDQUFBMkIsSUFBQSxDQUFBMUIsQ0FBQSxHQUFBNkQsSUFBQSxRQUFBakMsQ0FBQSxRQUFBM0IsTUFBQSxDQUFBRixDQUFBLE1BQUFBLENBQUEsVUFBQThCLENBQUEsdUJBQUFBLENBQUEsSUFBQTdDLENBQUEsR0FBQXVCLENBQUEsQ0FBQW1CLElBQUEsQ0FBQTNCLENBQUEsR0FBQW9ELElBQUEsTUFBQTFDLENBQUEsQ0FBQTRELElBQUEsQ0FBQXJGLENBQUEsQ0FBQUksS0FBQSxHQUFBcUIsQ0FBQSxDQUFBaUUsTUFBQSxLQUFBOUMsQ0FBQSxHQUFBQyxDQUFBLGlCQUFBN0IsQ0FBQSxJQUFBSyxDQUFBLE9BQUFGLENBQUEsR0FBQUgsQ0FBQSx5QkFBQTZCLENBQUEsWUFBQTlCLENBQUEsZUFBQWMsQ0FBQSxHQUFBZCxDQUFBLGNBQUFFLE1BQUEsQ0FBQVksQ0FBQSxNQUFBQSxDQUFBLDJCQUFBUixDQUFBLFFBQUFGLENBQUEsYUFBQU0sQ0FBQTtBQUFBLFNBQUF5RyxnQkFBQUQsR0FBQSxRQUFBUSxLQUFBLENBQUFLLE9BQUEsQ0FBQWIsR0FBQSxVQUFBQSxHQUFBO0FBRG1EO0FBQ3JCO0FBRTlCLElBQU1lLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFBLEVBQVM7RUFDeEIsSUFBQWxLLFNBQUEsR0FBd0JGLCtDQUFRLENBQUMsS0FBSyxDQUFDO0lBQUFHLFVBQUEsR0FBQUMsY0FBQSxDQUFBRixTQUFBO0lBQWhDbUssSUFBSSxHQUFBbEssVUFBQTtJQUFFbUssT0FBTyxHQUFBbkssVUFBQTtFQUNwQixJQUFBSSxVQUFBLEdBQTRCUCwrQ0FBUSxDQUFDLEtBQUssQ0FBQztJQUFBUSxVQUFBLEdBQUFKLGNBQUEsQ0FBQUcsVUFBQTtJQUFwQ2dLLE1BQU0sR0FBQS9KLFVBQUE7SUFBRWdLLFNBQVMsR0FBQWhLLFVBQUE7RUFDeEIsSUFBTWlLLEdBQUcsR0FBRyw0QkFBNEI7RUFDeEMsSUFBTUMsU0FBUztJQUFBLElBQUFDLElBQUEsR0FBQTlCLGlCQUFBLGVBQUEzRyxtQkFBQSxHQUFBZ0YsSUFBQSxDQUFHLFNBQUEwRCxRQUFPQyxHQUFHO01BQUEsSUFBQUMsR0FBQSxFQUFBQyxTQUFBO01BQUEsT0FBQTdJLG1CQUFBLEdBQUFxQixJQUFBLFVBQUF5SCxTQUFBQyxRQUFBO1FBQUEsa0JBQUFBLFFBQUEsQ0FBQXRELElBQUEsR0FBQXNELFFBQUEsQ0FBQWhGLElBQUE7VUFBQTtZQUFBZ0YsUUFBQSxDQUFBaEYsSUFBQTtZQUFBLE9BQ1JpRixLQUFLLENBQUNMLEdBQUcsQ0FBQztVQUFBO1lBQXRCQyxHQUFHLEdBQUFHLFFBQUEsQ0FBQXRGLElBQUE7WUFBQXNGLFFBQUEsQ0FBQWhGLElBQUE7WUFBQSxPQUNlNkUsR0FBRyxDQUFDSyxJQUFJLENBQUMsQ0FBQztVQUFBO1lBQTVCSixTQUFTLEdBQUFFLFFBQUEsQ0FBQXRGLElBQUE7WUFDZmhFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDbUosU0FBUyxDQUFDO1lBQ3RCVCxPQUFPLENBQUNTLFNBQVMsQ0FBQztVQUFDO1VBQUE7WUFBQSxPQUFBRSxRQUFBLENBQUFuRCxJQUFBO1FBQUE7TUFBQSxHQUFBOEMsT0FBQTtJQUFBLENBQ3BCO0lBQUEsZ0JBTEtGLFNBQVNBLENBQUFVLEVBQUE7TUFBQSxPQUFBVCxJQUFBLENBQUF6QixLQUFBLE9BQUFELFNBQUE7SUFBQTtFQUFBLEdBS2Q7RUFDRGtCLGdEQUFTLENBQUMsWUFBTTtJQUNkTyxTQUFTLENBQUNELEdBQUcsQ0FBQztFQUNoQixDQUFDLEVBQUUsQ0FBQ0YsTUFBTSxDQUFDLENBQUM7RUFDWixJQUFNYyxTQUFTO0lBQUEsSUFBQUMsS0FBQSxHQUFBekMsaUJBQUEsZUFBQTNHLG1CQUFBLEdBQUFnRixJQUFBLENBQUcsU0FBQXFFLFNBQU9DLEVBQUU7TUFBQSxPQUFBdEosbUJBQUEsR0FBQXFCLElBQUEsVUFBQWtJLFVBQUFDLFNBQUE7UUFBQSxrQkFBQUEsU0FBQSxDQUFBL0QsSUFBQSxHQUFBK0QsU0FBQSxDQUFBekYsSUFBQTtVQUFBO1lBQUF5RixTQUFBLENBQUF6RixJQUFBO1lBQUEsT0FDbkJpRixLQUFLLElBQUFTLE1BQUEsQ0FBSWxCLEdBQUcsT0FBQWtCLE1BQUEsQ0FBSUgsRUFBRSxHQUFJO2NBQzFCaEcsTUFBTSxFQUFFO1lBQ1YsQ0FBQyxDQUFDO1VBQUE7WUFDRmdGLFNBQVMsQ0FBQyxVQUFDb0IsU0FBUztjQUFBLE9BQUssQ0FBQ0EsU0FBUztZQUFBLEVBQUM7VUFBQztVQUFBO1lBQUEsT0FBQUYsU0FBQSxDQUFBNUQsSUFBQTtRQUFBO01BQUEsR0FBQXlELFFBQUE7SUFBQSxDQUN0QztJQUFBLGdCQUxLRixTQUFTQSxDQUFBUSxHQUFBO01BQUEsT0FBQVAsS0FBQSxDQUFBcEMsS0FBQSxPQUFBRCxTQUFBO0lBQUE7RUFBQSxHQUtkO0VBQ0QsSUFBTTZDLE9BQU8sR0FBR3pCLElBQUksR0FDaEJBLElBQUksQ0FBQzBCLEdBQUcsQ0FBQyxVQUFDQyxHQUFHO0lBQUEsb0JBQ1hqTSwwREFBQTtNQUFJMkksR0FBRyxFQUFFc0QsR0FBRyxDQUFDUjtJQUFHLEdBQ2JRLEdBQUcsQ0FBQzNMLElBQUksZUFDVE4sMERBQUE7TUFBUWtNLE9BQU8sRUFBRSxTQUFBQSxRQUFBO1FBQUEsT0FBTVosU0FBUyxDQUFDVyxHQUFHLENBQUNSLEVBQUUsQ0FBQztNQUFBO0lBQUMsR0FBQyxNQUFZLENBQ3BELENBQUM7RUFBQSxDQUNOLENBQUMsR0FDRixTQUFTO0VBQ2Isb0JBQ0V6TCwwREFBQSwyQkFDRUEsMERBQUEsYUFBSytMLE9BQVksQ0FBQyxlQUVsQi9MLDBEQUFBLENBQUNFLCtDQUFNLE1BQUUsQ0FDTixDQUFDO0FBRVYsQ0FBQztBQUNELGlFQUFlbUssV0FBVzs7Ozs7Ozs7VUN0QzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXM2LXJlYWN0Ly4vMTNfRHppZW5fMjIvMDJfSlNPTl9TZXJ2ZXIvMDFfWmFkYW5pZS9qcy9BZGRDYXIuanMiLCJ3ZWJwYWNrOi8vZXM2LXJlYWN0Ly4vMTNfRHppZW5fMjIvMDJfSlNPTl9TZXJ2ZXIvMDFfWmFkYW5pZS9qcy9DYXJzTWFuYWdlci5qcyIsIndlYnBhY2s6Ly9lczYtcmVhY3Qvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuY29uc3QgQWRkQ2FyID0gKCkgPT4ge1xyXG5cclxuICAgIGNvbnN0IFtuYW1lLCBzZXROYW1lXSA9IHVzZVN0YXRlKFwiXCIpO1xyXG4gICAgY29uc3QgW2JyYW5kLCBzZXRCcmFuZF0gPSB1c2VTdGF0ZShcIlwiKTtcclxuICAgIGNvbnN0IFt0eXBlLCBzZXRUeXBlXSA9IHVzZVN0YXRlKFwiXCIpO1xyXG4gICAgY29uc3QgW2hwLCBzZXRIcF0gPSB1c2VTdGF0ZShcIlwiKTtcclxuXHJcbiAgICBjb25zdCBpbnB1dEhhbmRsZXIgPSAoZSwgaW5wdXRUeXBlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaW5wdXRWYWx1ZSA9IGUudGFyZ2V0LnZhbHVlXHJcblxyXG4gICAgICAgIHN3aXRjaChpbnB1dFR5cGUpe1xyXG4gICAgICAgICAgICBjYXNlICduYW1lJzogc2V0TmFtZShpbnB1dFZhbHVlKSA7XHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgICAgIGNhc2UgJ2JyYW5kJzogc2V0QnJhbmQoaW5wdXRWYWx1ZSk7XHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgICAgIGNhc2UgJ3R5cGUnOiBzZXRUeXBlKGlucHV0VmFsdWUpO1xyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgICAgICBjYXNlICdocCc6IHNldEhwKGlucHV0VmFsdWUpO1xyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgIH0gICBcclxuXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3VibWl0SGFuZGxlciA9IChlKSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGUpXHJcbiAgICAgICAgY29uc3QgZm9ybUluZm8gPSAgICAge1xyXG4gICAgICAgICAgICBcImlkXCI6IDE2LFxyXG4gICAgICAgICAgICBcIm5hbWVcIjogZS50YXJnZXQudmFsdWUubmFtZSxcclxuICAgICAgICAgICAgXCJicmFuZFwiOiBlLnRhcmdldC52YWx1ZS5icmFuZCxcclxuICAgICAgICAgICAgXCJlbmdpbmVcIjoge1xyXG4gICAgICAgICAgICAgIFwidHlwZVwiOiBlLnRhcmdldC52YWx1ZS50eXBlLFxyXG4gICAgICAgICAgICAgIFwiaHBcIjogNzYwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgc2V0TmFtZShcIlwiKVxyXG4gICAgICAgIHNldEJyYW5kKFwiXCIpXHJcbiAgICAgICAgc2V0VHlwZShcIlwiKVxyXG4gICAgICAgIHNldEhwKFwiXCIpXHJcblxyXG4gICAgfVxyXG5cclxuICAgIFxyXG5cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtzdWJtaXRIYW5kbGVyfT5cclxuICAgICAgICAgICAgPGxhYmVsPlxyXG4gICAgICAgICAgICAgICAgTmF6d2FcclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXsoZSwgaW5wdXRUeXBlKSA9PiBpbnB1dEhhbmRsZXIoZSwnbmFtZScpfSB2YWx1ZT17bmFtZX0+PC9pbnB1dD5cclxuICAgICAgICAgICAgPGxhYmVsPlxyXG4gICAgICAgICAgICAgICAgTWFya2FcclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXsoZSwgaW5wdXRUeXBlKSA9PiBpbnB1dEhhbmRsZXIoZSwnYnJhbmQnKX0gdmFsdWU9e2JyYW5kfT48L2lucHV0PlxyXG4gICAgICAgICAgICA8bGFiZWw+XHJcbiAgICAgICAgICAgICAgICBUeXBcclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXsoZSwgaW5wdXRUeXBlKSA9PiBpbnB1dEhhbmRsZXIoZSwndHlwZScpfSB2YWx1ZT17dHlwZX0+PC9pbnB1dD5cclxuICAgICAgICAgICAgPGxhYmVsPlxyXG4gICAgICAgICAgICAgICAgTW9jXHJcbiAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBvbkNoYW5nZT17KGUsIGlucHV0VHlwZSkgPT4gaW5wdXRIYW5kbGVyKGUsJ2hwJyl9IHZhbHVlPXtocH0+PC9pbnB1dD5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPVwiQWRkQ2FyXCIgPjwvaW5wdXQ+XHJcbiAgICAgICAgICAgIDwvZm9ybT5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFkZENhcjsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgQWRkQ2FyIGZyb20gXCIuL0FkZENhclwiO1xyXG5cclxuY29uc3QgQ2Fyc01hbmFnZXIgPSAoKSA9PiB7XHJcbiAgY29uc3QgW2NhcnMsIHNldENhcnNdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgVVJMID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvY2Fyc1wiO1xyXG4gIGNvbnN0IGZldGNoQ2FycyA9IGFzeW5jICh1cmwpID0+IHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XHJcbiAgICBjb25zdCByZXNQYXJzZWQgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2cocmVzUGFyc2VkKTtcclxuICAgIHNldENhcnMocmVzUGFyc2VkKTtcclxuICB9O1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBmZXRjaENhcnMoVVJMKTtcclxuICB9LCBbc3RhdHVzXSk7XHJcbiAgY29uc3QgZGVsZXRlQ2FyID0gYXN5bmMgKGlkKSA9PiB7XHJcbiAgICBhd2FpdCBmZXRjaChgJHtVUkx9LyR7aWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICB9KTtcclxuICAgIHNldFN0YXR1cygocHJldlN0YXRlKSA9PiAhcHJldlN0YXRlKTtcclxuICB9O1xyXG4gIGNvbnN0IGNhckxpc3QgPSBjYXJzXHJcbiAgICA/IGNhcnMubWFwKChjYXIpID0+IChcclxuICAgICAgICA8bGkga2V5PXtjYXIuaWR9PlxyXG4gICAgICAgICAge2Nhci5uYW1lfVxyXG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBkZWxldGVDYXIoY2FyLmlkKX0+U29sZDwvYnV0dG9uPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgICkpXHJcbiAgICA6IFwibm8gY2Fyc1wiO1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8dWw+e2Nhckxpc3R9PC91bD5cclxuXHJcbiAgICAgIDxBZGRDYXIgLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IENhcnNNYW5hZ2VyOyIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImJhMzk5ZmI2ZWE4ZDE1MmUzY2ViXCIpIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJBZGRDYXIiLCJfdXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkiLCJuYW1lIiwic2V0TmFtZSIsIl91c2VTdGF0ZTMiLCJfdXNlU3RhdGU0IiwiYnJhbmQiLCJzZXRCcmFuZCIsIl91c2VTdGF0ZTUiLCJfdXNlU3RhdGU2IiwidHlwZSIsInNldFR5cGUiLCJfdXNlU3RhdGU3IiwiX3VzZVN0YXRlOCIsImhwIiwic2V0SHAiLCJpbnB1dEhhbmRsZXIiLCJlIiwiaW5wdXRUeXBlIiwiaW5wdXRWYWx1ZSIsInRhcmdldCIsInZhbHVlIiwic3VibWl0SGFuZGxlciIsInByZXZlbnREZWZhdWx0IiwiY29uc29sZSIsImxvZyIsImZvcm1JbmZvIiwiY3JlYXRlRWxlbWVudCIsIkZyYWdtZW50Iiwib25TdWJtaXQiLCJvbkNoYW5nZSIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJ0IiwiciIsIk9iamVjdCIsInByb3RvdHlwZSIsIm4iLCJoYXNPd25Qcm9wZXJ0eSIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImkiLCJTeW1ib2wiLCJhIiwiaXRlcmF0b3IiLCJjIiwiYXN5bmNJdGVyYXRvciIsInUiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwiYXJnIiwiY2FsbCIsImgiLCJsIiwiZiIsInMiLCJ5IiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsInAiLCJkIiwiZ2V0UHJvdG90eXBlT2YiLCJ2IiwidmFsdWVzIiwiZyIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImludm9rZSIsIl90eXBlb2YiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIkVycm9yIiwiZG9uZSIsIm1ldGhvZCIsImRlbGVnYXRlIiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiVHlwZUVycm9yIiwicmVzdWx0TmFtZSIsIm5leHQiLCJuZXh0TG9jIiwicHVzaFRyeUVudHJ5IiwidHJ5TG9jIiwiY2F0Y2hMb2MiLCJmaW5hbGx5TG9jIiwiYWZ0ZXJMb2MiLCJ0cnlFbnRyaWVzIiwicHVzaCIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpc05hTiIsImxlbmd0aCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImNvbnN0cnVjdG9yIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJrZXlzIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJfY2F0Y2giLCJkZWxlZ2F0ZVlpZWxkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJpbmZvIiwiZXJyb3IiLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsImFyciIsIl9hcnJheVdpdGhIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVJlc3QiLCJtaW5MZW4iLCJfYXJyYXlMaWtlVG9BcnJheSIsInRvU3RyaW5nIiwiQXJyYXkiLCJmcm9tIiwidGVzdCIsImxlbiIsImFycjIiLCJpc0FycmF5IiwidXNlRWZmZWN0IiwiQ2Fyc01hbmFnZXIiLCJjYXJzIiwic2V0Q2FycyIsInN0YXR1cyIsInNldFN0YXR1cyIsIlVSTCIsImZldGNoQ2FycyIsIl9yZWYiLCJfY2FsbGVlIiwidXJsIiwicmVzIiwicmVzUGFyc2VkIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsImZldGNoIiwianNvbiIsIl94IiwiZGVsZXRlQ2FyIiwiX3JlZjIiLCJfY2FsbGVlMiIsImlkIiwiX2NhbGxlZTIkIiwiX2NvbnRleHQyIiwiY29uY2F0IiwicHJldlN0YXRlIiwiX3gyIiwiY2FyTGlzdCIsIm1hcCIsImNhciIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9